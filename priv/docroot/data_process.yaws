<erl>
	out(A) -> {ssi, "HEAD.inc","%%",[{"Pl", " - Data process"}]}.
</erl>

<div><h1>Results</h1></div>

<erl>

out(A) ->

	IsTestDataMerged = case postvar(A, "merge_test_data") of
		{ok, _} -> security_server:merge_test_data(), true;
		_ -> false
	end,

	{ok, DTMethod} = postvar(A, "datetime_method"),
	
	{ok, SecurityName}   = postvar(A, "security"),
	SN = list_to_atom(SecurityName),
	
	{DateTime, {{Year, Month, Day}, {Hour, Minute, Second}}} %% Second text variant needed only as info in result text
		= case DTMethod of
				"local_datetime" -> 
					{{IYear, IMonth, IDay}, {IHour, IMinute, ISecond}} = IDT = erlang:localtime(),
					
					{IDT, {
								{i(IYear), i(IMonth), i(IDay)},     %% No, I'm not an Apple fan.
						   		{i(IHour), i(IMinute), i(ISecond)}
						  }
					};
				_ ->
					{ok, SDay} = postvar(A, "transaction_day"),
					{ok, SMonth} = postvar(A, "transaction_month"),
					{ok, SYear} = postvar(A, "transaction_year"),
					{ok, SHour} = postvar(A, "transaction_hour"),
					{ok, SMinute} = postvar(A, "transaction_minute"),
					{ok, SSecond} = postvar(A, "transaction_second"),
					Y  = list_to_integer(SYear),
					M  = list_to_integer(SMonth),
					D  = list_to_integer(SDay),
					H  = list_to_integer(SHour),
					MM = list_to_integer(SMinute),
					S  = list_to_integer(SSecond),
					{{{Y,M,D}, {H,MM,S}}, {{SYear, SMonth, SDay}, {SHour, SMinute, SSecond}}}
				end,

	{ok, Price}  = postvar(A, "price"),
	{ok, Amount} = postvar(A, "amount"),

	P  = case string:to_float(Price) of
			{error, _} -> list_to_integer(Price) / 1.0;
			{N, _} -> N
		 end,
	Am = case string:to_float(Amount) of
			{error, _} -> list_to_integer(Amount) / 1.0;
			{N2, _} -> N2
		 end,

	SecData  = {SN, P, Am},
	security_server:add_transaction({DateTime, SecData}),

	Result = "Added: "
		++ "{" ++ Day
		++ "/" ++ Month
		++ "/" ++ Year
		++ " " ++ Hour
		++ ":" ++ Minute
		++ ":" ++ Second
		++ "} " ++ SecurityName
		++ ", P:" ++ Price
		++ " A:" ++ Amount,

	{ehtml, {'div', [], [
		{p, [], Result},
		{p, [], m(IsTestDataMerged)}
	]}}.

i(Num) -> integer_to_list(Num).
m(true) -> "Test data merged into current data.";
m(_) -> "".

</erl>

<p><a href="./data_input.yaws">Input data</a></p>
<p><a href="./data_output.yaws">View data</a></p>
<p><a href="./data_collect.yaws">Filter and collect data</a></p>
<p><a href="./data_test.yaws">Security server tests</a></p>
<p><a href="./index.yaws">Home page</a></p>


<erl>
out(A) -> {ssi,"END.inc",[],[]}.
</erl>
